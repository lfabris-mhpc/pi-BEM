#required variables:
#startdir=
#nprocs=1
#nthreads=1
#ncores=4
#mode
#func (for plain problems)

function run_simple {
    export OMP_NUM_THREADS=${nthreads}
    if (( nprocs > 1 ))
    then
        perf stat --detailed mpirun --np ${nprocs} --map-by node:PE=${nthreads} bem_fma_3d ${nthreads} > log 2>&1
    else
        perf stat --detailed mpirun --np ${nprocs} --map-by node:PE=${nthreads} --bind-to none bem_fma_3d ${nthreads} > log 2>&1
    fi

    result=${?}

    if (( result == 0 ))
    then
        which meshio-info > /dev/null 2>&1
        missing_meshio=${?}
    
        for fn in result_scalar_results result_vector_results #scalar_error vector_error
        do
            cp ./${fn}.vtu ${startdir}/reg_np${nprocs}_nt${nthreads}_${fn}_f${func}_${solver}.vtu
            
            echo "reg_np${nprocs}_nt${nthreads}_${fn}_f${func}_${solver}.vtu"
            if (( missing_meshio == 0 ))
            then 
                meshio-info ${startdir}/reg_np${nprocs}_nt${nthreads}_${fn}_f${func}_${solver}.vtu
            fi
        done
        
        cp log ${startdir}/reg_np${nprocs}_nt${nthreads}_f${func}_${solver}.log
        cat log >> ${startdir}/reg_np${nprocs}_nt${nthreads}_f${func}_${solver}_log.log
    else
        echo "error during problem ${func} - nprocs ${nprocs} - nthreads ${nthreads} - solver ${solver}"
        
        #the first is for simple reading, the one appending is for python mega pandas dataframing
        cp log ${startdir}/reg_np${nprocs}_nt${nthreads}_f${func}_${solver}.err
        cat log >> ${startdir}/reg_np${nprocs}_nt${nthreads}_f${func}_${solver}_log.err
    fi
}

function run_complex {
    export OMP_NUM_THREADS=${nthreads}
    if (( nprocs > 1 ))
    then
        perf stat --detailed mpirun --np ${nprocs} --map-by node:PE=${nthreads} bem_fma_3d ${nthreads} > log 2>&1
    else
        perf stat --detailed mpirun --np ${nprocs} --map-by node:PE=${nthreads} --bind-to none bem_fma_3d ${nthreads} > log 2>&1
    fi

    result=${?}

    if (( result == 0 ))
    then
        which meshio-info > /dev/null 2>&1
        missing_meshio=${?}
    
        #first component has no suffix on filename
        for fn in result_scalar_results result_vector_results #scalar_error vector_error
        do
            cp ./${fn}.vtu ${startdir}/reg_np${nprocs}_nt${nthreads}_${fn}_complex_f1_${solver}.vtu
            
            echo "reg_np${nprocs}_${fn}_complex_f1.vtu"
            if (( missing_meshio == 0 ))
            then 
                meshio-info ${startdir}/reg_np${nprocs}_nt${nthreads}_${fn}_complex_f1_${solver}.vtu
            fi
        done
        #do the remaining comps
        for func in 2
        do
            for fn in result_${func}_scalar_results result_${func}_vector_results #scalar_${func}_error vector_${func}_error
            do
                fn_redux="${fn/_${func}/}"
                cp ./${fn}.vtu ${startdir}/reg_np${nprocs}_nt${nthreads}_${fn_redux}_complex_f${func}_${solver}.vtu
                
                echo "reg_np${nprocs}_nt${nthreads}_${fn_redux}_complex_f${func}.vtu"
                if (( missing_meshio == 0 ))
                then 
                    meshio-info ${startdir}/reg_np${nprocs}_nt${nthreads}_${fn_redux}_complex_f${func}_${solver}.vtu
                fi
            done
        done
        
        #the first is for simple reading, the one appending is for python mega pandas dataframing
        cp log ${startdir}/reg_np${nprocs}_nt${nthreads}_complex_${solver}.log
        cat log >> ${startdir}/reg_np${nprocs}_nt${nthreads}_complex_${solver}_log.log
    else
        echo "error during complex problem - nprocs ${nprocs} - nthreads ${nthreads} - solver ${solver}"
        
        #the first is for simple reading, the one appending is for python mega pandas dataframing
        cp log ${startdir}/reg_np${nprocs}_nt${nthreads}_complex_${solver}.err
        cat log >> ${startdir}/reg_np${nprocs}_nt${nthreads}_complex_${solver}_log.err
    fi
}
